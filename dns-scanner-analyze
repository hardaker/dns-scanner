#!/usr/bin/python

import argparse
import dns_scanner_analyze
import dns_scanner_reader
import json

def parse_args():
    parser = argparse.ArgumentParser("dns-scanner-analyze")
    parser.add_argument("directory", metavar="directory", type=str,
                        help="Directory of files to read", nargs="+")
    parser.add_argument("-p", "--path", metavar="path", type=str, default="records/ttl",
                        help="Packet path to count.  EG: records/ttl or records/rrdata/ipv4_address")
    parser.add_argument("-l", "--list-paths", action="store_true", help="list the available paths found in the data")
    parser.add_argument("-1", "--onlyfirst", action="store_true", help="only read the first entry in each file")
    parser.add_argument("-P", "--dump-records-at-path", type=str,
                        help="only read the first entry in each file")
    parser.add_argument("-d", "--dump", action="store_true", help="just dump what's read in")
    parser.add_argument("-j", "--json", action="store_true", help="just json about what's read in")
    return parser.parse_args()

def main():
    args = parse_args()

    # read the data
    dsr = dns_scanner_reader.DnsScannerReader()
    dsr.set_onlyfirst(args.onlyfirst)
    results = dsr.read_directories_of_files(args.directory)
    
    if args.dump:
        print results
        exit(0)

    if args.json:
        print json.dumps(results)
        exit(0)

    # analyze it
    dsa = dns_scanner_analyze.DnsScannerAnalyze()

    # just dump the found paths if requested
    if args.list_paths:
        dsa.print_paths(results)
        exit(0)

    if args.dump_records_at_path:
        path = args.dump_records_at_path.split("/")
        dsa.print_data_at_path(results, path)
        exit(0)


    path = args.path.split("/")
    dsa.print_count_fields_at_path(results, path)

main()
